(()=>{"use strict";const e=(()=>{const e=[],t=t=>{let d=e.find((e=>e.getName()===t));return d||(d=(e=>{let t=e,d=[];return{getName:()=>t,addHandler:e=>{d.push(e)},invokeHandlers:e=>{d.forEach((t=>{t(e)}))}}})(t),e.push(d)),d};return{publish:(e,d)=>{t(e).invokeHandlers(d)},subscribe:(e,d)=>{t(e).addHandler(d)}}})(),t=(()=>{const t=document.querySelector(".category-container"),d=document.querySelector(".add-category");let n=null;const r=(e,t=null,d=null)=>{const n=document.createElement(e);return t&&t.forEach((e=>n.classList.add(e))),d&&(n.textContent=d),n},i=(t,d)=>{n&&n.classList.remove("active"),t.classList.add("active"),n=t,e.publish("categoryActive",d)},a=e=>{const d=(e=>{const t=r("div",["category"]);return t.appendChild(r("div",["text"],e)),t.appendChild(r("div",["delete","btn"],"x")),t})(e.getName());t.appendChild(d),(e=>{const d=t.lastChild,n=d.lastChild;n.addEventListener("click",(t=>{t.stopPropagation(),s(n.parentNode,e.getName())})),d.addEventListener("click",(()=>{i(d,e.getName())}))})(e),i(d,e.getName())},s=(t,d)=>{t.remove(),e.publish("removeCategory",d)},o=document.querySelector(".item-container"),c=document.querySelector(".add-item"),l=e=>{for(;o.childElementCount>0;)o.lastChild.remove();e.map((e=>u(e)))},u=e=>{o.appendChild((e=>{const t=r("div",["item"]);return t.appendChild(r("div",["text"],e.content)),t.appendChild(r("div",["delete","btn"],"x")),t})(e))};return{init:()=>{d.addEventListener("click",(()=>{e.publish("addCategory",prompt("Enter"))})),c.addEventListener("click",(()=>{const t=n.firstChild.textContent,d=prompt("Enter");e.publish("addItem",{activeCategoryName:t,itemContent:d})})),e.subscribe("categoryAdded",a),e.subscribe("categoryItemsLoaded",l),e.subscribe("itemAdded",u)}}})(),d=(()=>{const t=[],d=e=>t.find((t=>t.getName()===e)),n=n=>{if(d(n))return void alert("This category already exists!");const r=(e=>{let t=e,d=[];return{getName:()=>t,addItem:e=>{const t={id:0,content:e};return d.push(t),t},getItems:()=>d}})(n);t.push(r),e.publish("categoryAdded",r)},r=e=>{const n=t.indexOf(d(e));t.splice(n,1)},i=t=>{const n=d(t).getItems();e.publish("categoryItemsLoaded",n)},a=t=>{const n=d(t.activeCategoryName).addItem(t.itemContent);e.publish("itemAdded",n)};return{init:()=>{e.subscribe("addCategory",n),e.subscribe("removeCategory",r),e.subscribe("categoryActive",i),e.subscribe("addItem",a)}}})();t.init(),d.init(),e.publish("addCategory","All"),e.publish("addCategory","Random"),e.publish("addCategory","Categories")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,