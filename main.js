(()=>{"use strict";const e=(()=>{const e=[],t=t=>{let n=e.find((e=>e.getName()===t));return n||(n=(e=>{let t=e,n=[];return{getName:()=>t,addHandler:e=>{n.push(e)},invokeHandlers:e=>{n.forEach((t=>{t(e)}))}}})(t),e.push(n)),n};return{publish:(e,n)=>{t(e).invokeHandlers(n)},subscribe:(e,n)=>{t(e).addHandler(n)}}})(),t=(()=>{const t=(e,t=null,n=null)=>{const o=document.createElement(e);return t&&t.forEach((e=>o.classList.add(e))),n&&(o.textContent=n),o},n=e=>e.classList.value.split(" ")[0],o=document.querySelector(".category-container"),d=document.querySelector(".add-category"),i=document.getElementById("active-category");let s=null;const c=t=>{s&&s.classList.remove("active"),t.classList.add("active"),s=t;const o=n(t);i.textContent=o,e.publish("categoryActive",o)},r=e=>{const d=(e=>{const n=t("div",[e.getName(),"category"]);return n.appendChild(t("div",["text"],e.getName())),0!=o.childElementCount&&n.appendChild(t("div",["delete","btn"],"x")),n})(e);o.appendChild(d),(e=>{n(e);const t=e.lastChild;t.addEventListener("click",(e=>{e.stopPropagation(),a(t.parentNode)})),e.addEventListener("click",(()=>c(e)))})(d),c(d)},a=t=>{t==s&&c(o.firstElementChild),t.remove(),e.publish("removeCategory",n(t))},l=document.querySelector(".item-container"),m=document.querySelector(".add-item"),u=e=>{for(;l.childElementCount>0;)l.lastChild.remove();e.map((e=>p(e)))},p=e=>{const n=(e=>{const n=t("div",[e.categoryName,"item"]),o=document.createElement("input");return o.type="checkbox",e.isDone&&(n.classList.add("done"),o.checked=!0),n.appendChild(o),n.appendChild(t("div",["text"],e.content)),n.appendChild(t("div",["delete","btn"],"x")),n})(e);l.appendChild(n),(e=>{const t=Array.from(e.children),n=t.find((e=>e.classList.contains("text"))).textContent,o=t.find((e=>e.classList.contains("delete"))),d=t.find((e=>"checkbox"==e.type));o.addEventListener("click",(()=>g(e,n))),d.addEventListener("click",(()=>h(d,n)))})(n)},g=(t,o)=>{t.remove(),e.publish("removeItem",{categoryName:n(t),itemContent:o})},h=(t,o)=>{const d=t.parentNode;t.checked?d.classList.add("done"):d.classList.remove("done"),e.publish("toggleDone",{categoryName:n(d),itemContent:o,isDone:t.checked})};return{init:()=>{d.addEventListener("click",(()=>{e.publish("addCategory",prompt("Enter"))})),e.subscribe("categoryAdded",r),m.addEventListener("click",(()=>{const t=s.firstChild.textContent,n=prompt("Enter");e.publish("addItem",{categoryName:t,itemContent:n})})),e.subscribe("categoryItemsLoaded",u),e.subscribe("itemAdded",p),e.publish("addCategory","All"),e.publish("addCategory","Random"),e.publish("addCategory","Categories"),c(o.firstElementChild)},setActive:c}})(),n=t;(()=>{const t=[],n=e=>t.find((t=>t.getName()===e)),o=o=>{if(n(o))return void alert("This category already exists!");const d=(e=>{let t=e,n=[];const o=e=>n.find((t=>t.content===e));return{getName:()=>t,addItem:(e,t)=>{const o=((e,t,n)=>({isDone:!1,content:t,categoryName:n}))(0,e,t);return n.push(o),o},removeItem:e=>{const t=o(e);if(null==t)return null;const d=n.indexOf(t);return n.splice(d,1),t},toggleDone:e=>{const t=o(e);t.isDone=!t.isDone},getItems:()=>n}})(o);t.push(d),e.publish("categoryAdded",d)},d=e=>{const o=t.indexOf(n(e));t.splice(o,1)},i=o=>{let d=[];o===t[0].getName()?t.map((e=>e.getItems().map((e=>d.push(e))))):d=n(o).getItems(),e.publish("categoryItemsLoaded",d)},s=({categoryName:t,itemContent:o})=>{const d=n(t).addItem(o,t);e.publish("itemAdded",d)},c=({categoryName:e,itemContent:t})=>{n(e).removeItem(t)},r=({categoryName:e,itemContent:t})=>{n(e).toggleDone(t)};return{init:()=>{e.subscribe("addCategory",o),e.subscribe("removeCategory",d),e.subscribe("categoryActive",i),e.subscribe("addItem",s),e.subscribe("removeItem",c),e.subscribe("toggleDone",r)}}})().init(),n.init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,